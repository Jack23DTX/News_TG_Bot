<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="aa615310-146d-4baa-ad30-d39ade10a448" name="Changes" comment="Refactor import statements for better readability&#10;&#10;Reorganized import statements to separate standard library and third-party packages. Added a missing newline for consistent formatting. No functionality changes introduced.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/notifier/notifier.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/notifier/notifier.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/summary/openai.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/summary/openai.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="DEPENDENCY_CHECKER_PROBLEMS_TAB" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2qlKEHvyg8VzhHIJuzW9BRmvjCV" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Docker.docker-compose.dev.yml.bot: Compose Deployment.executor": "Run",
    "Docker.docker-compose.dev.yml: Compose Deployment.executor": "Run",
    "Docker.docker-compose.local.yml.bot: Compose Deployment.executor": "Run",
    "Docker.docker-compose.local.yml.db: Compose Deployment.executor": "Run",
    "Docker.docker-compose.local.yml: Compose Deployment.executor": "Run",
    "Go Build.go build main.go.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "database.data.extractors.current.export.id": "Comma-separated (CSV)_id",
    "database.data.extractors.current.id": "Comma-separated (CSV)_id",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "/Users/jackdtx",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "/Users/jackdtx/GolandPets/TgNewsPet/main.go",
    "settings.editor.selected.configurable": "vcs.Git"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/cmd" />
      <recent name="$PROJECT_DIR$/internal" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build main.go">
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="TgNewsPet" />
      <working_directory value="$PROJECT_DIR$" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <kind value="FILE" />
      <package value="TgNewsPet" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.dev.yml.bot: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="bot" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.dev.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.local.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.local.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.local.yml.bot: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="bot" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.local.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.local.yml.db: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.local.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.local.yml.bot: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.dev.yml.bot: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.local.yml.db: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.local.yml: Compose Deployment" />
      <item itemvalue="Go Build.go build main.go" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.local.yml.bot: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.local.yml.db: Compose Deployment" />
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Docker.docker-compose.local.yml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.dev.yml.bot: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-85c80fddc9a6-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.23654.166" />
        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-GO-243.23654.166" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="First commit" />
    <MESSAGE value="Second commit, connect to db, new table &quot;article&quot;, add gitignore" />
    <MESSAGE value="problems with main" />
    <MESSAGE value="add gitignor" />
    <MESSAGE value="Refactor project structure and enhance notifier functionality.&#10;&#10;Moved packages to &quot;internal&quot; to improve module encapsulation. Added OpenAI model configuration and integrated summarization into the notifier. Fixed database column and method naming inconsistencies, ensuring better code clarity and adherence to conventions." />
    <MESSAGE value="Refactor project structure and improve notifier functionality&#10;&#10;Moved key packages into an internal directory for better modularity. Improved notifier capabilities by adding context handling and enabling article summaries with OpenAI. Updated configurations to support OpenAI model and prompt settings." />
    <MESSAGE value="Update .gitignore to include GoLand-specific exclusions&#10;&#10;Added entries for GoLand IDE to the .gitignore file, expanding coverage for JetBrains IDEs. This ensures exclusion of IDE-specific files like workspace and configuration files, reducing clutter and avoiding potential issues with sensitive or high-churn files." />
    <MESSAGE value="Refactor project structure and enhance notifier functionality&#10;&#10;Moved key packages to an &quot;internal&quot; directory for better modularity. Improved the notifier by adding context handling and OpenAI-powered article summarization. Updated configurations to support the OpenAI model and prompt settings." />
    <MESSAGE value="Remove obsolete data source configuration file.&#10;&#10;The XML file for the `TgNewsPet@localhost` data source is deleted, likely because it is no longer in use or necessary. This cleanup reduces clutter in the repository and ensures unused configuration files are not retained." />
    <MESSAGE value="Delete unused IntelliJ data source configuration file&#10;&#10;Removed a large IntelliJ data source XML file as it is no longer needed. This cleanup reduces clutter and ensures the repository only contains necessary files. No functionality is affected by this change." />
    <MESSAGE value="Refactor import statements for better readability&#10;&#10;Reorganized import statements to separate standard library and third-party packages. Added a missing newline for consistent formatting. No functionality changes introduced." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor import statements for better readability&#10;&#10;Reorganized import statements to separate standard library and third-party packages. Added a missing newline for consistent formatting. No functionality changes introduced." />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/TgNewsPet$go_build_main_go.out" NAME="go build main.go Coverage Results" MODIFIED="1738514938180" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>